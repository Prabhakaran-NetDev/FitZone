@model FitZone.Models.CombinedUser

@{
    ViewBag.Title = "ForgotPassword";
    if (TempData["Message"] != null)
    {
        <script>alert('@TempData["Message"]');</script>
    }
}

<h2>ForgotPassword</h2>

@using (Html.BeginForm("ForgotPwdOtp", "Users"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Users.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Users.Email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Users.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="button" type="submit" value="Request OTP" class="btn btn-default" />
                <div style="display:inline-block;margin-left:20px;">
                    <p id="seconds" style="line-height:0;font-weight:bold;color:red;" hidden="hidden">00</p>
                </div>
            </div>
        </div>
    </div>
}

<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Users.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Users.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Users.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserDTOs.OTP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserDTOs.OTP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserDTOs.OTP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Users.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Users.Password, new { htmlAttributes = new { @class = "form-control", id = "password", type = "password" } })
                @Html.ValidationMessageFor(model => model.Users.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserDTOs.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserDTOs.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessageFor(model => model.UserDTOs.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10" style="margin-left:20px;">
                @Html.CheckBox("showPassword", false, new { id = "showPassword", @class = "form-check-input", onclick = "showPasswordChecked(this)" })
                <label class="control-label col-md-2">ShowPassword</label>
            </div>
        </div>

        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Home", "../Home/Index")
</div>
